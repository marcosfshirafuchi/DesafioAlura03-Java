/*
    Desafio 03 da Alura na linguagem Java.
    Desenvolvido por Marcos Ferreira Shirafuchi
    Desafio:

    Vamos implementar uma aplica√ß√£o para registrar compras em um cart√£o de cr√©dito.

    üî® Objetivos do projeto

    - Criar uma classe que represente uma compra (descri√ß√£o e valor);
    - Criar uma classe que represente um cart√£o de cr√©dito (limite, saldo e lista de compras), sendo que ela deve
    possuir um m√©todo para registrar uma compra;
    - Criar uma classe com o m√©todo main, seguindo os seguintes objetivos:
        1 - Solicitar que o usu√°rio informe o limite do cart√£o de cr√©dito;
        2 - Criar um objeto cart√£o de cr√©dito com o limite informado;
        3 -Solicitar que o usu√°rio informe a descri√ß√£o e o valor da compra;
        4 - Criar um objeto compra com a descri√ß√£o e valor informados;
        5 - Registrar a compra no cart√£o de cr√©dito e imprimir na tela se ela foi realizada ou n√£o (de acordo com
        o saldo remanescente);
        6 - Perguntar se o usu√°rio deseja registrar uma nova compra ou finalizar;
        7- Caso ele deseje continuar, repetir os passos de 3 a 6, caso n√£o, imprimir na tela o saldo final do
        cart√£o e a lista de compras realizadas, ordenadas pelo valor.

    Observa√ß√µes:

    - Utilize a classe Scanner para fazer a leitura das informa√ß√µes do usu√°rio;
    - Utilize construtores nas classes para passar as informa√ß√µes ao instanciar um objeto.
* */
package br.com.alura.desafio03.cartao;

import br.com.alura.desafio03.compra.Compra;

import java.util.ArrayList;
import java.util.List;

public class CartaoDeCredito  {
    //Propriedades da classe Cartao de Cr√©dito
    private double limiteCartao;
    private double saldoCartao;
    private List<Compra> comprasNoCart√£o;

    //M√©todo construtor da classe CartaoDeCredito
    public CartaoDeCredito(double limiteCartao) {

        this.limiteCartao = limiteCartao;
        this.saldoCartao = limiteCartao;
        this.comprasNoCart√£o = new ArrayList<>();

    }


    //Retorna o saldo do cart√£o
    public double getSaldoCartao() {
        return saldoCartao;
    }

    //Retorna as compras feitas no cart√£o
    public List<Compra> getComprasNoCart√£o() {
        return comprasNoCart√£o;
    }

    //m√©todo Lan√ßamento de compras que registra as compras
    public boolean lancamentoDeCompras(double compraValor, Compra compra) {
        //Se o valor da comprar for menor ou igual o saldo do cart√£o
        if(compraValor<=this.saldoCartao) {
            //Registra as compras e retorna true
            this.saldoCartao -= compraValor;
            this.comprasNoCart√£o.add(compra);
            return true;
        }else {
            //Sen√£o retornar false
            return false;
        }

    }

    //Verifica o limite do cart√£o
    public boolean verificaLimite(double compraValor){
        if(compraValor<=this.saldoCartao){
            return true;
        }
        else {
            return false;
        }
    }

}
